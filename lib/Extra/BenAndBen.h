#ifndef BENANDBEN_H
#define BENANDBEN_H
#include <Arduino.h>
#include <avr/pgmspace.h>

// Melody Data
// ---------------------------------------------------------------------------- 
// The melody is stored as an array of 16 bit unsigned integers (uint16_t)  
// where each integer encodes the note, octave and duration
//  
//   [duration][octave][note]  - ddddddddoooonnnn
//
//   note (nnnn) is 4 bits which are the note to play
//    C = 0, C# = 1, D = 2, D# = 3, E = 4, F = 5,
//    F# = 6, G = 7, G# = 8, A = 9, A# = 10, B = 11,
//    SILENT = 15
//
//   octave (oooo) is 4 bits which indicate the octave to play that note in,
//   maximum octave we can handle is 8, minimum is 0
//    octave 0 = 0 .. octave 8 = 8
//    
//   duration (dddddddd) is the duration of the note to play in units of tempo
//    hold note for 10 tempos = 10
//
// You can use the following web page to create the Melody data for you:
//    http://sparks.gogo.co.nz/midi_tone.html
//
// You can also select a human readable/editable output format on that page 
// instead of this short form version.


// The melodies must be named Melody0 .. Melody{NUMBER_OF_MELODIES-1}, and 
// each must also have a MelodyX_Length defined.
#define NUMBER_OF_MELODIES 1

// Track 0 - 
static const uint16_t Melody0[] PROGMEM = { 
        0b0001111001010110, 0b0001111101010100, 0b1011100011111111, 0b1111111101010110, 
        0b1111111101010110, 0b1000011101010110, 0b0111101101010010, 0b1111111101010100, 
        0b1001000001010100, 0b0001111101011001, 0b1111111111111111, 0b0001111001010100, 
        0b1111111111111111, 0b1111111101010010, 0b0001010101010010, 0b1111111101010001, 
        0b0101001101010001, 0b0000000011111111, 0b1111111101010010, 0b1111111101010010, 
        0b0000110001010010, 0b1111111101000100, 0b0101001101000100, 0b0000000011111111, 
        0b1111111101010001, 0b1111111101010001, 0b1000011101010001, 0b0000000011111111, 
        0b1111111101010110, 0b0111001001010110, 0b0000000011111111, 0b1111111101010001, 
        0b1110110101010001, 0b0000000011111111, 0b0011110101010100, 0b1111111111111111, 
        0b1111111101010110, 0b1110110101010110, 0b0001111111111111, 0b1101011101010100, 
        0b0000000011111111, 0b1111111101010110, 0b1111111101010110, 0b1111111101010110, 
        0b0010001001010110, 0b0000000011111111, 0b1111111101010010, 0b0101001101010010, 
        0b0000000011111111, 0b1111111101010100, 0b1111111101010100, 0b1000011101010100, 
        0b1111111101011001, 0b1111111101011001, 0b1010011001011001, 0b0000000011111111, 
        0b1111111101010100, 0b1111111101010100, 0b1111111101010100, 0b1111111101010100, 
        0b1111111101010100, 0b1000101001010100, 0b0000000011111111, 0b1011100001010010, 
        0b0000000011111111, 0b1111111101010010, 0b0011010101010010, 0b0000000011111111, 
        0b1111111101010001, 0b0111000101010001, 0b0000000011111111, 0b1111111101010010, 
        0b1100111001010010, 0b1111111101000100, 0b0101001001000100, 0b0000000011111111, 
        0b1111111101010001, 0b1111111101010001, 0b0110100101010001, 0b1111111101010110, 
        0b1111111101010110, 0b1010011001010110, 0b0000000011111111, 0b1111111101010001, 
        0b1111111101010001, 0b0000110001010001, 0b0000000011111111, 0b0011110101010100, 
        0b1111111111111111, 0b1111111101010010, 0b0111001001010010, 0b0000000011111111, 
        0b1111111101010001, 0b1111111101010001, 0b1000011101010001, 0b0000000011111111, 
        0b1111111101010010, 0b0101001101010010, 0b0000000011111111, 0b1111111101010001, 
        0b1111111101010001, 0b1010010101010001, 0b1111111101001011, 0b1111111101001011, 
        0b0110100101001011, 0b1111111101011011, 0b0111000101011011, 0b0111101101100001, 
        0b1111111111111111, 0b1111111101010100, 0b0111000101010100, 0b0000000011111111, 
        0b1111111101010110, 0b1111111101010110, 0b1111111101010110, 0b1111111101010110, 
        0b1011001101010110, 0b0000000011111111, 0b0001111001010010, 0b0001111111111111, 
        0b1111111101010001, 0b0101001101010001, 0b0000000011111111, 0b1111111101010010, 
        0b0111001001010010, 0b0000000011111111, 0b1111111101010001, 0b1100111001010001, 
        0b1111111101001011, 0b1111111101001011, 0b1010011001001011, 0b1111111101011011, 
        0b0111000101011011, 0b1111111101100001, 0b1111111101100001, 0b0110100101100001, 
        0b0000000011111111, 0b1111111101010100, 0b0111000101010100, 0b0000000011111111, 
        0b0001111101010110, 0b0000000011111111, 0b1111111101010010, 0b0101001101010010, 
        0b0000000011111111, 0b1111111101010001, 0b1111111101010001, 0b1010011001010001, 
        0b0000000011111111, 0b1111111101010010, 0b0101001101010010, 0b0000000011111111, 
        0b1111111101010001, 0b1111111101010001, 0b1100010001010001, 0b0000000011111111, 
        0b1111111101010100, 0b1111111101010100, 0b1111111101010100, 0b1111111101010100, 
        0b1111111101010100, 0b1111111101010100, 0b1111111101010100, 0b1111111101010100, 
        0b1111111101010100, 0b1010001101010100, 0b0001111001001001, 0b1011100011111111, 
        0b1111111101010110, 0b1111111101010110, 0b1111111101010110, 0b1111111101010110, 
        0b0101011001010110, 0b0000000011111111, 0b1111111101011001, 0b1111111101011001, 
        0b1110010001011001, 0b1111111111111111, 0b0001111101010010, 0b1111111101010111, 
        0b1111111101010111, 0b0100101001010111, 0b0000000011111111, 0b0001111101010110, 
        0b1111111111111111, 0b1111111101010100, 0b1111111101010100, 0b0010101101010100, 
        0b0000000011111111, 0b1111111101010010, 0b1111111101010010, 0b1110010001010010, 
        0b0000000011111111, 0b1111111101010001, 0b1111111101010001, 0b1111111101010001, 
        0b1011110001010001, 0b1111111101011001, 0b1111111101011001, 0b1100010001011001, 
        0b1111111111111111, 0b1111111101001001, 0b0111000101001001, 0b0000000011111111, 
        0b1111111101010111, 0b1111111101010111, 0b0110100101010111, 0b0000000011111111, 
        0b1111111101010110, 0b1111111101010110, 0b1000011101010110, 0b0000000011111111, 
        0b1111111101010100, 0b1111111101010100, 0b1000011101010100, 0b0000000011111111, 
        0b1111111101010010, 0b1111111101010010, 0b1010011001010010, 0b0000000011111111, 
        0b1111111101001011, 0b1111111101001011, 0b1111111101001011, 0b1111111101001011, 
        0b0011011101001011, 0b0000000011111111, 0b0011110101010110, 0b1111111111111111, 
        0b0001111101001011, 0b1011100011111111, 0b1111111101010111, 0b1111111101010111, 
        0b0110100101010111, 0b0000000011111111, 0b1111111101010110, 0b1111111101010110, 
        0b1000011101010110, 0b0000000011111111, 0b1111111101010100, 0b1111111101010100, 
        0b1111111101010100, 0b1001110101010100, 0b0000000011111111, 0b1101011101001001, 
        0b0000000011111111, 0b0001111101010110, 0b1111111111111111, 0b1111111101011001, 
        0b0101001101011001, 0b0000000011111111, 0b1111111101011001, 0b1111111101011001, 
        0b1100010101011001, 0b1111111111111111, 0b1111111101010010, 0b0101001101010010, 
        0b0001111101010111, 0b1111111111111111, 0b1111111101010110, 0b1111111101010110, 
        0b1100010001010110, 0b0000000011111111, 0b1111111101010100, 0b1111111101010100, 
        0b1000011101010100, 0b0000000011111111, 0b1111111101011001, 0b1111111101011001, 
        0b0000110001011001, 0b0000000011111111, 0b0001111101010100, 0b1111111111111111, 
        0b1111111101011001, 0b0101001101011001, 0b1111111101010010, 0b1111111101010010, 
        0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 
        0b1111111101010010, 0b1001011001010010, 0b0000000011111111, 0b1111111101011001, 
        0b1110110101011001, 0b1111111101010001, 0b1111111101010001, 0b1111111101010001, 
        0b1111100101010001, 0b0000000011111111, 0b1111111101010010, 0b1111111101010010, 
        0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 
        0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 
        0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 
        0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 
        0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 
        0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 
        0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 
        0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 
        0b1111111101010010, 0b1111111101010010, 0b1111111101010010, 0b0101100001010010, 
        0b0000000011111111, 
  };
static const uint16_t Melody0_Length    = sizeof( Melody0 ) / sizeof(uint16_t);

#endif